[project]
name = "agentman"
version = "0.1.0"
description = ""
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Xiaodong Ye", email = "yeahdongcn@gmail.com" },
]
requires-python = ">=3.10"
dependencies = [
    "fast-agent-mcp>=0.2.28",
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
agentman = "agentman.cli:main"

[build-system]
requires    = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 120
skip-string-normalization = true
preview = true
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.tox
  | \.venv
  | \.history
  | build
  | dist
  | docs
  | hack
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--color=yes"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src/agentman"]
omit = [
    "tests/*",
    "src/agentman/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv]
package = true